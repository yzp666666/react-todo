{"version":3,"file":"js/app.107b9c49.js","mappings":"opCAkIA,QArDA,WACI,IAA+BA,EAAAC,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA1BC,EAAIH,EAAA,GAACI,EAAOJ,EAAA,GACcK,EAAAJ,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA1BI,EAAID,EAAA,GAACE,EAAOF,EAAA,GAEbG,EAAQ,W,MACJL,EAAKM,OAINH,EAAKI,MAAK,SAAAC,GAAI,OAAEA,EAAKC,OAAOT,CAAI,IAC/BU,MAAM,YAGVN,EAAQ,GAADO,O,+CAAKR,I,qSAAI,CAAC,CAACS,GAAGC,KAAKC,MAAML,MAAMT,EAAKe,MAAK,MAChDd,EAAQ,KARJS,MAAM,eASd,EAUA,OACIM,EAAAA,cAAA,WACIA,EAAAA,cAAA,SAAOC,KAAK,OACZC,MAAOlB,EACPmB,SAAU,SAACC,GAAC,OAAGnB,EAAQmB,EAAEC,OAAOH,MAAM,EACtCI,UAAW,SAACF,GAAC,OAVR,SAACA,GACI,IAAXA,EAAEG,SACDlB,GAER,CAMwBmB,CAASJ,EAAE,IAE3BJ,EAAAA,cAAA,UAAQS,QAASpB,GAAS,MAElBF,EAAKuB,KAAI,SAAClB,EAAKmB,GAAK,OAChBX,EAAAA,cAAA,OAAKY,IAAKD,GACNX,EAAAA,cAAA,YAAOR,EAAKC,OAAa,OAEzBO,EAAAA,cAAA,YAAOW,GACPX,EAAAA,cAAA,QACAa,MAAO,CAACC,WAAW,OAAOC,MAAM,MAAMC,OAAO,WAG7CP,QAAS,kBA1BpBb,EA0BgCJ,EAAKI,QAzB9CR,EAAQD,EAAK8B,QAAO,SAAAzB,GAAI,OAAEA,EAAKI,IAAIA,CAAE,KAD7B,IAACA,CA0BwC,GAC5B,KACC,IAK9B,ECnHA,EARA,WACI,OAEQI,EAAAA,cAACkB,EAAQ,KAErB,E,aCLWC,EAAAA,EAAAA,GAAWC,SAASC,eAAe,QACzCC,OAAOtB,EAAAuB,cAACC,EAAG,M","sources":["webpack://react-webpak/./src/pages/todolist/TodoList.jsx","webpack://react-webpak/./src/App.jsx","webpack://react-webpak/./src/main.js"],"sourcesContent":["import React,{useState} from \"react\";\r\n\r\n// class TodoList extends React.Component {\r\n//     constructor() {\r\n//         super();\r\n//         this.state = {\r\n//             todo: '',\r\n//             list: []\r\n//         }\r\n//     }\r\n//     getTodo(e) {\r\n//         this.setState({\r\n//             todo: e.target.value\r\n//         })\r\n//     }\r\n//     // 添加todo\r\n//     confirm() {\r\n//         if(!this.state.todo){\r\n//             alert('输入框不能为空哦~')\r\n//             return ;\r\n//         }\r\n//         if(this.state.list.some(item=>item.title==this.state.todo)){\r\n//             alert('请不要重复添加哦~');\r\n//             return\r\n//         }\r\n//         this.setState((state) => {\r\n//             return {\r\n//                 list: [...state.list, { id: Date.now(), title: this.state.todo, done: false }]\r\n//             }\r\n//         })\r\n//         //清空input框\r\n//         this.setState({\r\n//             todo: ''\r\n//         })\r\n//     }\r\n//     // 删除\r\n//     delTodo(id){\r\n//         this.setState((state)=>{\r\n//             return {\r\n//                 list:state.list.filter(item=>item.id!=id)\r\n//             }\r\n//         })\r\n//     }\r\n//     // 回车事件\r\n//     enterTodo(e){\r\n//         if(e.keyCode==13){\r\n//             this.confirm()\r\n//         }\r\n//     }\r\n//     render() {\r\n//         let { todo, list } = this.state\r\n//         return (\r\n//             <div>\r\n//                 {/* 受控组件 */}\r\n//                 <input type=\"text\" \r\n//                 value={todo} \r\n//                 onChange={(e) => { this.getTodo(e) }}\r\n//                 onKeyDown={(e)=>{this.enterTodo(e)}} \r\n//                 />\r\n//                 <button onClick={() => { this.confirm() }}>添加</button>\r\n//                 <div>\r\n//                     {\r\n//                         list.map((item, index) => (\r\n//                             <div key={index}>\r\n//                                 <span>{item.title}</span>\r\n//                                 ----\r\n//                                 <span>{index}</span>\r\n//                                 <button onClick={()=>{this.delTodo(item.id)}}>X</button>\r\n//                             </div>\r\n//                         ))\r\n//                     }\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nfunction TodoList(){\r\n    let [todo,setTodo]=useState('');\r\n    let [list,setList]=useState([])\r\n    \r\n    let confirm=()=>{\r\n        if(!todo.trim()){\r\n            alert('请输入something')\r\n            return\r\n        }\r\n        if(list.some(item=>item.title==todo)){\r\n            alert('请不要重复输入');\r\n            return \r\n        }\r\n        setList([...list,{id:Date.now(),title:todo,done:false}]);\r\n        setTodo('')\r\n    }\r\n    //删除todo\r\n    let delTodo=(id)=>{\r\n        setList(list.filter(item=>item.id!=id))\r\n    }\r\n    let addEnter=(e)=>{\r\n        if(e.keyCode==13){\r\n            confirm()\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <input type=\"text\" \r\n            value={todo} \r\n            onChange={(e)=>setTodo(e.target.value)}\r\n            onKeyDown={(e)=>addEnter(e)}\r\n            />\r\n            <button onClick={confirm}>添加</button>\r\n                {\r\n                    list.map((item,index)=>(\r\n                        <div key={index}>\r\n                            <span>{item.title}</span>\r\n                            ----\r\n                            <span>{index}</span>\r\n                            <span \r\n                            style={{marginLeft:'16px',color:'red',cursor:'pointer'}}\r\n                            // delTodo(item.id)如果这样写就 意味着函数直接执行了 \r\n                            // 需要传递参数的话 前面得写箭头函数\r\n                            onClick={()=>delTodo(item.id)}\r\n                            >X</span>\r\n                        </div>\r\n                    ))\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoList","import React from \"react\";\r\n// import DemoA from \"@/pages/state/Demo3\";\r\n// import DemoA from \"@/pages/condition/Demo1\";\r\nimport TodoList from \"@/pages/todolist/TodoList\";\r\nfunction App(){\r\n    return(\r\n            // <DemoA/>\r\n            <TodoList/>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","import {createRoot} from 'react-dom/client';\r\nimport App from './App.jsx';\r\n\r\n\r\nconst root=createRoot(document.getElementById('app'));\r\nroot.render(<App/>);\r\n"],"names":["_useState2","_slicedToArray","useState","todo","setTodo","_useState4","list","setList","confirm","trim","some","item","title","alert","concat","id","Date","now","done","React","type","value","onChange","e","target","onKeyDown","keyCode","addEnter","onClick","map","index","key","style","marginLeft","color","cursor","filter","TodoList","createRoot","document","getElementById","render","createElement","App"],"sourceRoot":""}